cmake_minimum_required(VERSION 3.5)
project(ppt LANGUAGES CXX)

set(PPT_TOP_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR})
set(PPT_TOP_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

set(ppt_VERSION_MAJOR 00)
set(ppt_VERSION_MINOR 01)
set(ppt_VERSION_PATCH 00)
set(ppt_VERSION
    "${ppt_VERSION_MAJOR}.${ppt_VERSION_MINOR}.${ppt_VERSION_PATCH}")
math(
  EXPR
  PPT_VERSION
  "${ppt_VERSION_MAJOR} * 10000 + ${ppt_VERSION_MINOR} * 100 + ${ppt_VERSION_PATCH}"
)
message(STATUS "Configuring PPT v${ppt_VERSION}")

message(STATUS "Setting policy CMP0074 to use <Package>_ROOT variables")
cmake_policy(SET CMP0074 NEW)

add_subdirectory(src)
add_subdirectory(tests)
# add_subdirectory(apps)

# ##############################################################################
# Installation instructions

include(GNUInstallDirs)
set(INSTALL_CONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/ppt)

install(
  TARGETS PPT
  EXPORT PPT-targets
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})

# This is required so that the exported target has the name JSONUtils and not
# jsonutils
set_target_properties(PPT PROPERTIES EXPORT_NAME PPT)

install(DIRECTORY ${PPT_TOP_SOURCE_DIR}/include/
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
# Remember to install autogenerated file too
install(FILES ${PPT_TOP_BUILD_DIR}/src/include/ppt/PPT_config.hpp
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ppt)

# Export the targets to a script
install(
  EXPORT PPT-targets
  FILE PPTTargets.cmake
  NAMESPACE PPT::
  DESTINATION ${INSTALL_CONFIGDIR})

# Create a ConfigVersion.cmake file
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
  ${CMAKE_CURRENT_BINARY_DIR}/PPTConfigVersion.cmake
  VERSION ${ppt_VERSION}
  COMPATIBILITY AnyNewerVersion)

configure_package_config_file(
  ${PPT_TOP_SOURCE_DIR}/cmake/PPTConfig.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/PPTConfig.cmake
  INSTALL_DESTINATION ${INSTALL_CONFIGDIR})

# Install the config, configversion and custom find modules
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/PPTConfig.cmake
              ${CMAKE_CURRENT_BINARY_DIR}/PPTConfigVersion.cmake
        DESTINATION ${INSTALL_CONFIGDIR})

# ##############################################################################
# Exporting from the build tree
export(
  EXPORT PPT-targets
  FILE ${CMAKE_CURRENT_BINARY_DIR}/PPTTargets.cmake
  NAMESPACE PPT::)

# Register package in the User Package Registry
export(PACKAGE PPT)
